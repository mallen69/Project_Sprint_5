monday_norman <- gs_title("Norman EOSS (Responses)")
monday_norman <- gs_read(ss=monday_norman, ws ="Form Responses 1")
monday_norman
gs_ls()
end_of_sprint_survey
library(googlesheets)
gs_ls()
monday_norman <- 'https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982'
monday_norman <- gs_title("Norman EOSS (Responses)")
monday_norman <- gs_read(ss=monday_norman, ws ="Form Responses 1")
monday_norman
gs_ls()
monday_norman <- 'https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982'
monday_norman <- gs_title("Norman EOSS (Responses)")
monday_norman <- gs_read(ss=monday_norman, ws ="Form Responses 1")
monday_norman
library(googlesheets)
gs_ls()
Sprint_2 <- gs_title("Sprint_2_EOSS (Response")
Sprint_2 <- gs_title("Sprint_2_EOSS (Response)")
Sprint_2 <-  https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982
Sprint_2 <-  'https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982'
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2 <- gs_read(ss=Sprint_2_EOSS, ws = "Form Responses 1")
Sprint_2
Sprint_2 <- gs_title("Sprint_2_EOSS (Responses)")
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(end_of_sprint_survey)
view(Sprint_2)
getwd()
library(googlesheets)
gs_ls()
Sprint_2 <-'https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982'
Sprint_2 <- gs_title("Sprint_2_EOSS (Responses)")
gs_ws_ls(Sprint_2)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
getwd()
library(googlesheets)
gs_ls()
Sprint_2 <-'https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982'
Sprint_2 <- gs_title("Sprint_2_EOSS (Responses)")
gs_ws_ls(Sprint_2)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(Sprint_2)
save.image("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_2/R_Workspace_Reading_reading_a_google_sheet.RData")
getwd()
Install.packages(“googlesheets”)
library(googlesheets)
gs_ls()
Sprint_2 <-’https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982’
Sprint_2 <- gs_title(“Sprint_2_EOSS (Responses)”)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(Sprint_2)
getwd()
Install.packages(“googlesheets”)
library(googlesheets)
gs_ls()
Sprint_2 <-’https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982’
Sprint_2 <- gs_title(“Sprint_2_EOSS (Responses)”)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(Sprint_2)
getwd()
Install.packages(“googlesheets”)
library(googlesheets)
gs_ls()
Sprint_2 <-’https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982’
Sprint_2 <- gs_title(“Sprint_2_EOSS (Responses)”)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(Sprint_2)
getwd()
getwd()
Install.packages(“googlesheets”)
library(googlesheets)
gs_ls()
Sprint_2 <-’https://docs.google.com/spreadsheets/d/1Oze5HnI8jEVtKvhwt2LbO42Ec5ErHI6_IArt3sS7HxY/edit#gid=319180982’
Sprint_2 <- gs_title(“Sprint_2_EOSS (Responses)”)
Sprint_2 <- gs_read(ss=Sprint_2, ws = "Form Responses 1")
Sprint_2
View(Sprint_2)
View(Sprint_2)
View(Sprint_2)
View(monday_norman)
library()
# make some data
months <-rep(c("jan", "feb", "mar", "apr", "may", "jun",
"jul", "aug", "sep", "oct", "nov", "dec"), 2)
chickens <-c(1, 2, 3, 3, 3, 4, 5, 4, 3, 4, 2, 2)
eggs <-c(0, 8, 10, 13, 16, 20, 25, 20, 18, 16, 10, 8)
values <-c(chickens, eggs)
type <-c(rep("chickens", 12), rep("eggs", 12))
mydata <-data.frame(months, values)
library(ggplot2)
p <-ggplot(mydata, aes(months, values))
p +geom_bar(stat = "identity")
View(mydata)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.
#Also needed to do the na.rm=True in order for it to work
highest_percentage_sick <- max(sick$percentage_sick, na.rm = TRUE)
#Filter out all of the NA's for the percentage_sick
filter(sick, !is.na(percentage_sick))
#Create a new variable called "Sicker" that only has the percentage_sick values without any NA's
Sicker <- filter(sick, !is.na(percentage_sick))
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#View the top disease per State and show the percentage_sick
View(States_highest_sick)
p <-ggplot(mydata, aes(months, values))
mean(States_highest_sick$percentage_sick)
sd(States_highest_sick$percentage_sick)
summary(States_highest_sick$percentage_sick)
boxplot(States_highest_sick$percentage_sick)
lm(States_highest_sick$percentage_sick)
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(sick)
#Calculate the disease Hepatits A per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the disease Hepatits A per State (by the highest percentage_sick)
Hepatitis_highest_sick <- ddply(Sicker, 'disease', 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
Hepatitis_highest_sick <- ddply(Sicker, 'Hepatitis A', 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
filter(sick, (disease))
group_by(sick, disease$Hepatitis A)
Hepatatits_A_only <- ddply(Sicker, 'disease', function(x) x[x"Hepatitis A"==(x"Hepatitis A"),])
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
View(Hepatitis_A_Only)
View(sick)
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Hepatitis_A_States_highest)
unique(sick$disease)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#This line of code gives me the list of all the different diseases
unique(sick$disease)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.
#Also needed to do the na.rm=True in order for it to work
highest_percentage_sick <- max(sick$percentage_sick, na.rm = TRUE)
#Filter out all of the NA's for the percentage_sick
filter(sick, !is.na(percentage_sick))
#Create a new variable called "Sicker" that only has the percentage_sick values without any NA's
Sicker <- filter(sick, !is.na(percentage_sick))
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the top disease per state (by the highest percentage_sick)
mean(States_highest_sick$percentage_sick)
#Calculate the Standard Deviation of the top disease per state (by the highest percentage_sick)
sd(States_highest_sick$percentage_sick)
#Calculate the Summary Statistics of the top disease per state (by the highest percentage_sick)
summary(States_highest_sick$percentage_sick)
#Create a varibable name of Hepatitis_A_Only which will be used to View/Calculate further only that disease
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
#Calculate the Hepatatis A disease per State (by the highest percentage_sick)
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#View the top disease per State and show the percentage_sick
View(States_highest_sick)
unique(sick$disease)
mean(Hepatitis_A_States_highest$percentage_sick)
Mumps_Only <- subset(sick, disease == "Mumps")
View(Mumps_Only)
Mumps_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Mumps_highest)
Mumps_highest_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Mumps_highest_States_highest)
Mumps_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Mumps_States_highest)
mean(Mumps_States_highest$percentage_sick)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#This line of code gives me the list of all the different diseases
unique(sick$disease)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.
#Also needed to do the na.rm=True in order for it to work
highest_percentage_sick <- max(sick$percentage_sick, na.rm = TRUE)
#Filter out all of the NA's for the percentage_sick
filter(sick, !is.na(percentage_sick))
#Create a new variable called "Sicker" that only has the percentage_sick values without any NA's
Sicker <- filter(sick, !is.na(percentage_sick))
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the top disease per state (by the highest percentage_sick)
mean(States_highest_sick$percentage_sick)
#Calculate the Standard Deviation of the top disease per state (by the highest percentage_sick)
sd(States_highest_sick$percentage_sick)
#Calculate the Summary Statistics of the top disease per state (by the highest percentage_sick)
summary(States_highest_sick$percentage_sick)
#Create a varibable name of Hepatitis_A_Only which will be used to View/Calculate further only that disease
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
#Calculate the Hepatatis A disease per State (by the highest percentage_sick)
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Hepatatis_A disease per state (by the highest percentage_sick)
mean(Hepatitis_A_States_highest$percentage_sick)
#Create a varibable name of Mumps_Only which will be used to View/Calculate further only that disease
Mumps_Only <- subset(sick, disease == "Mumps")
#Calculate the Hepatatis A disease per State (by the highest percentage_sick)
Mumps_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Mumps disease per state (by the highest percentage_sick)
mean(Mumps_States_highest$percentage_sick)
#View the top disease per State and show the percentage_sick
View(States_highest_sick)
unique(sick$disease)
Pertussis_Only <- subset(sick, disease == "Pertussis")
View(Pertussis_Only)
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
Mumps_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Mumps_States_highest)
Pertussis_Only <- subset(sick, disease == "Pertussis")
View(Pertussis_Only)
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
Polio_Only <- subset(sick, disease == "Polio")
View(Polio_Only)
Polio_States_highest <- ddply(Polio_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Polio_States_highest)
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Hepatitis_A_States_highest)
Rubella <- subset(sick, disease == "Rubella")
View(Rubella)
Rubella_Only <- subset(sick, disease == "Rubella")
Rubella_States_highest <- ddply(Rubella_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Rubella_States_highest)
mean(Rubella_States_highest$percentage_sick)
Smallpox_Only <- subset(sick, disease == "Smallpox")
View(Smallpox_Only)
Smallpox_States_highest <- ddply(Smallpox_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Smallpox_States_highest)
#Filter out all of the NA's for the percentage_sick
filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
filter(Pertussis_Only, !is.na(counts))
filter(Pertussis_Only, !is.na(count))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
filter(Pertussis_Only, !is.na(weeks_reporting,count,percentage_sick))
filter(Pertussis_Only, !is.na(weeks_reporting))
Sicker_Pertussis <- filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
filter(Pertussis_Only, !is.na(weeks_reporting))
Sicker_Pertussis <- filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
#Create a varibable name of Pertussis_Only which will be used to View/Calculate further only that disease
Pertussis_Only <- subset(sick, disease == "Pertussis")
filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_weeks_reporting <- filter(Pertussis_Only, !is.na(weeks_reporting))
filter(Pertussis_Only, !is.na(count))
Pertussis_count <- filter(Pertussis_Only, !is.na(count))
filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_percentage_sick <- filter(Pertussis_Only, !is.na(percentage_sick))
View(Pertussis_States_highest)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#This line of code gives me the list of all the different diseases
unique(sick$disease)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.
#Also needed to do the na.rm=True in order for it to work
highest_percentage_sick <- max(sick$percentage_sick, na.rm = TRUE)
#Filter out all of the NA's for the percentage_sick
filter(sick, !is.na(percentage_sick))
#Create a new variable called "Sicker" that only has the percentage_sick values without any NA's
Sicker <- filter(sick, !is.na(percentage_sick))
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the top disease per state (by the highest percentage_sick)
mean(States_highest_sick$percentage_sick)
#Calculate the Standard Deviation of the top disease per state (by the highest percentage_sick)
sd(States_highest_sick$percentage_sick)
#Calculate the Summary Statistics of the top disease per state (by the highest percentage_sick)
summary(States_highest_sick$percentage_sick)
#Create a varibable name of Hepatitis_A_Only which will be used to View/Calculate further only that disease
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
#Calculate the Hepatatis A disease per State (by the highest percentage_sick)
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Hepatatis_A disease per state (by the highest percentage_sick)
mean(Hepatitis_A_States_highest$percentage_sick)
#Create a varibable name of Mumps_Only which will be used to View/Calculate further only that disease
Mumps_Only <- subset(sick, disease == "Mumps")
#Calculate the Mumps disease per State (by the highest percentage_sick)
Mumps_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Mumps disease per state (by the highest percentage_sick)
mean(Mumps_States_highest$percentage_sick)
#Create a varibable name of Pertussis_Only which will be used to View/Calculate further only that disease
Pertussis_Only <- subset(sick, disease == "Pertussis")
filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_weeks_reporting <- filter(Pertussis_Only, !is.na(weeks_reporting))
filter(Pertussis_Only, !is.na(count))
Pertussis_count <- filter(Pertussis_Only, !is.na(count))
filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_percentage_sick <- filter(Pertussis_Only, !is.na(percentage_sick))
#Calculate the Pertussis disease per State (by the highest percentage_sick)
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Create a varibable name of Polio_Only which will be used to View/Calculate further only that disease
Polio_Only <- subset(sick, disease == "Polio")
#Calculate the Polio disease per State (by the highest percentage_sick)
Polio_States_highest <- ddply(Polio_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Create a varibable name of Rubella_Only which will be used to View/Calculate further only that disease
Rubella_Only <- subset(sick, disease == "Rubella")
#Calculate the Rubella disease per State (by the highest percentage_sick)
Rubella_States_highest <- ddply(Rubella_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Rubella disease per state (by the highest percentage_sick)
mean(Rubella_States_highest$percentage_sick)
#Create a varibable name of Smallpox_Only which will be used to View/Calculate further only that disease
Smallpox_Only <- subset(sick, disease == "Smallpox")
#Calculate the Smallpox disease per State (by the highest percentage_sick)
Smallpox_States_highest <- ddply(Smallpox_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#View the top disease per State and show the percentage_sick
View(States_highest_sick)
Pertussis_Only <- subset(sick, disease == "Pertussis")
filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_weeks_reporting <- filter(Pertussis_Only, !is.na(weeks_reporting))
filter(Pertussis_Only, !is.na(count))
Pertussis_count <- filter(Pertussis_Only, !is.na(count))
filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_percentage_sick <- filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Pertussis_States_highest)
new_dataframe = as.data.frame(lapply(Pertussis_Only, na.omit))
na.omit(Pertussis_Only)
View(Pertussis_Only)
Pertussis_percentage_sick <- filter(Pertussis_Only, !is.na(percentage_sick))
na.omit(percentage_sick)
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
na.omit(Pertussis_States_highest)
View(Pertussis_States_highest)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#This line of code gives me the list of all the different diseases
unique(sick$disease)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.
#Also needed to do the na.rm=True in order for it to work
highest_percentage_sick <- max(sick$percentage_sick, na.rm = TRUE)
#Filter out all of the NA's for the percentage_sick
filter(sick, !is.na(percentage_sick))
#Create a new variable called "Sicker" that only has the percentage_sick values without any NA's
Sicker <- filter(sick, !is.na(percentage_sick))
#Calculate the top disease per State (by the highest percentage_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the top disease per state (by the highest percentage_sick)
mean(States_highest_sick$percentage_sick)
#Calculate the Standard Deviation of the top disease per state (by the highest percentage_sick)
sd(States_highest_sick$percentage_sick)
#Calculate the Summary Statistics of the top disease per state (by the highest percentage_sick)
summary(States_highest_sick$percentage_sick)
#Create a varibable name of Hepatitis_A_Only which will be used to View/Calculate further only that disease
Hepatitis_A_Only <- subset(sick, disease == "Hepatitis A")
#Calculate the Hepatatis A disease per State (by the highest percentage_sick)
Hepatitis_A_States_highest <- ddply(Hepatitis_A_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Hepatatis_A disease per state (by the highest percentage_sick)
mean(Hepatitis_A_States_highest$percentage_sick)
#Create a varibable name of Mumps_Only which will be used to View/Calculate further only that disease
Mumps_Only <- subset(sick, disease == "Mumps")
#Calculate the Mumps disease per State (by the highest percentage_sick)
Mumps_States_highest <- ddply(Mumps_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Mumps disease per state (by the highest percentage_sick)
mean(Mumps_States_highest$percentage_sick)
#Create a varibable name of Pertussis_Only which will be used to View/Calculate further only that disease
Pertussis_Only <- subset(sick, disease == "Pertussis")
filter(Pertussis_Only, !is.na(weeks_reporting))
Pertussis_weeks_reporting <- filter(Pertussis_Only, !is.na(weeks_reporting))
filter(Pertussis_Only, !is.na(count))
Pertussis_count <- filter(Pertussis_Only, !is.na(count))
filter(Pertussis_Only, !is.na(percentage_sick))
Pertussis_percentage_sick <- filter(Pertussis_Only, !is.na(percentage_sick))
#Calculate the Pertussis disease per State (by the highest percentage_sick)
Pertussis_States_highest <- ddply(Pertussis_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Create a varibable name of Polio_Only which will be used to View/Calculate further only that disease
Polio_Only <- subset(sick, disease == "Polio")
#Calculate the Polio disease per State (by the highest percentage_sick)
Polio_States_highest <- ddply(Polio_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Create a varibable name of Rubella_Only which will be used to View/Calculate further only that disease
Rubella_Only <- subset(sick, disease == "Rubella")
#Calculate the Rubella disease per State (by the highest percentage_sick)
Rubella_States_highest <- ddply(Rubella_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#Calculate the mean of the highest Rubella disease per state (by the highest percentage_sick)
mean(Rubella_States_highest$percentage_sick)
#Create a varibable name of Smallpox_Only which will be used to View/Calculate further only that disease
Smallpox_Only <- subset(sick, disease == "Smallpox")
#Calculate the Smallpox disease per State (by the highest percentage_sick)
Smallpox_States_highest <- ddply(Smallpox_Only, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
#View the top disease per State and show the percentage_sick
View(States_highest_sick)
install.packages("stats-package")
scatterplot(Smallpox_States_highest)
plot(Rubella_States_highest)
aov(depentent~as.factor(disease)*as.factor(percentage_sick),data = Sicker)
aov(dependent~as.factor(disease)*as.factor(percentage_sick),data = Sicker)
aov(percentage_sick~as.factor(independent1)*as.factor(percentage_sick),data = Sicker)
library(car)
install.packages("car")
library(car)
library("car")
aov(percentage_sick~as.factor(independent1)*as.factor(percentage_sick),data = Sicker)
aov(percentage_sick~as.factor(percentage_sick)* as.factor(disease),data = Sicker)
res<
-
anova2$residuals
