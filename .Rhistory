#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where my Dirty Excel file is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading my Dirty Excel file into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the libary ggplot2
library(ggplot2)
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
sick <- transform(sick, percentage_sick = count / population)
View(sick)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the libary ggplot2
library(ggplot2)
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
highest_year <- max(sick$year)
highest_count <- max(sick$count)
highest_sick <- max(sick$percentage_sick, na.rm = TRUE)
lowest_sick <- min(sick$percentage_sick, na.rm = TRUE)
View(sick)
print(highest_sick)
View(highest_sick)
str(highest_sick)
install.packages("plyr")
install.packages("plyr")
library("plyr")
All_highest_sick <- ddply(sick, 'state', transform, bestMargin = max(percentage_sick))
States_highest_sick <- ddply(sick, 'state', transform,  = max(percentage_sick))
All_highest_sick <- ddply(sick, 'state', transform, bestMargin = max(percentage_sick))
States_highest_sick <- ddply(sick, 'state', transform, bestMargin = max(percentage_sick))
print(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', transform,  = max(percentage_sick))
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(margin))
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
str(States_highest_sick)
print(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', transform, High_State = max(percentage_sick))
print(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- sick %% group_by(state) %% summarise(High_Percentage_by_State = max(percentage_sick))
States_highest_sick <- sick %% group_by('state') %% summarise(High_Percentage_by_State = max(percentage_sick))
library(dplyr)
States_highest_sick <- sick %% group_by('state') %% summarise(High_Percentage_by_State = max(percentage_sick))
States_highest_sick <- sick %% group_by(state) %% summarise(High_Percentage_by_State = max(percentage_sick))
States_highest_sick <- sick %% group_by("state") %% summarise(High_Percentage_by_State = max(percentage_sick))
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
View(States_highest_sick)
View(sick)
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', transform, High_State = max(percentage_sick))
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) ,])
highest_count <- max(sick$count)
str(highest_count)
str(percentage_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
print(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),na.rm = TRUE])
States_highest_sick <- ddply(sick, 'state',na.rm = TRUE, function(x) x[x$percentage_sick==max(x$percentage_sick),])
States_highest_sick <- ddply(sick, 'state',na.rm = TRUE, function(x) x[x$percentage_sick==max(x$percentage_sick)na.rm = TRUE,])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),],na.rm = TRUE)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),] && [fun = function(x, na.rm)])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),],na.rm = TRUE)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) && (!is.na(x)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) && (!is.na(x)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) && (is.na(x)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) && (!is.na(x$percentage_sick)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) && (is.na(x$percentage_sick)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) & (!is.na(x$percentage_sick)),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) & (is.na(x$percentage_sick)),])
View(States_highest_sick)
is.na(sick$percentage_sick)
sick[is.na(sick$percentage_sick)]
sick[is.na(sick$percentage_sick)]
filter(sick, is.na(percentage_sick))
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick) & (is.na(x$percentage_sick)),])
filter(sick, !is.na(percentage_sick))
sick
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
Sicker <- filter(sick, !is.na(percentage_sick))
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
highest_sick <- (sick$percentage_sick, na.rm = TRUE
lowest_sick <- min(sick$percentage_sick, na.rm = TRUE
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure
#out how to get the rest of the columns back
#States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(sick)
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(Sicker)
View(States_highest_sick)
#The start of working with the US Contagious Diseases
#Setting my working Directory in order to be in the folder where the US_Contagious_Diseases is.
setwd("C:/Users/micha/Desktop/DevLeague Begins Nov 7 2017/Project_Sprint_5/")
#Loading libraries and reading the CSV file "us_contagious_diseases into R.
#Loading the library dplyr in order for the
library(dplyr)
#Loading the library ggplot2
library(ggplot2)
#Loading the library plyr in order to use the ddply() function
library("plyr")
#Creating the variable "sick" to represent the ""us_contagious_diseases.csv""
#which was pulled from the Internet
sick <- read.csv("us_contagious_diseases.csv")
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
highest_sick <- (sick$percentage_sick, na.rm = TRUE
lowest_sick <- min(sick$percentage_sick, na.rm = TRUE
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure
#out how to get the rest of the columns back
#States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
highest_sick <- (sick$percentage_sick, na.rm = TRUE
lowest_sick <- min(sick$percentage_sick, na.rm = TRUE
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure
#out how to get the rest of the columns back
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
highest_sick <- (sick$percentage_sick, na.rm = TRUE
lowest_sick <- min(sick$percentage_sick, na.rm = TRUE
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure                              #out how to get the rest of the columns back
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
sick <- transform(sick, percentage_sick = count / population)
View(sick)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure                              #out how to get the rest of the columns back
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
States_highest_sick <- ddply(sick, 'state', summarize, High_State = max(percentage_sick))
View(States_highest_sick)
#calculating the percentage of people that are sick for that particular disease per the population
sick <- transform(sick, percentage_sick = count / population)
#turning the year column of integers into a column that contains R categories (called factors)
#Don't know for sure if I need to do this or not yet...
#sick$year <- integer(sick$year, ordered = TRUE)
#If I wanted to know the highest year in the dataset
highest_year <- max(sick$year)
#If I wanted to know the highest counts of diseases in the dataset
highest_count <- max(sick$count)
#If I wanted to know the highest percentage_sick that is found in the data set.  Also needed to do the na.rm=True
#in order for it to work.
filter(sick, !is.na(percentage_sick))
Sicker <- filter(sick, !is.na(percentage_sick))
#In order to give me the highest percentage_sick for each state, still need to now figure                              #out how to get the rest of the columns back
States_highest_sick <- ddply(Sicker, 'state', function(x) x[x$percentage_sick==max(x$percentage_sick),])
View(States_highest_sick)
